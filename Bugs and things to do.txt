	---Quick TODO's---

-UPDATE GAME VERSION. Then move on Tile overhaul. Last one!
-continue commeting code and renovating code
-display current player score in score mode

Note to self: for more little bugs/ideas/concerns, search code for "TODO"
-----------------------------------------------------------------------------------

	####BUGS####
####
I accidently removed the whole "SmashParticle" thing it seems... same with FireParticle...
####
The shift-g cheat totally glitches things up. Not any more than usual, but using it has always created all sorts of weird behavior with the inventory items; especially things like lanterns.
####
Sound effects don't always play when they should; mostly it seems when other sounds should be on at the same time.
####
Many item names don't fit on the black "active item" bar at the bottom.
####
LegacyLoad class is becoming annoying to handle; it should be reimplemented so that it won't have to be changed at all to reflect future updates. This could be done by making it only return values, and not actually reference any current variables. This may prove overcomplicated, though.
####
-----------------------------------------------------------------------------------

	****IDEAS(that should probably be implemented)****
****

Mention of the title screen the alternate keys you can use to get around.

****

Ok, so, for the sake of Loading and simplicity, everything that can should use some form of java utility, such as that things that get saved should implement Serializable; at the least, a toString() method should be made that provides all the necessary info to reconstruct that instance.

****

Make respawn without bed += 20 blocks x/y of last spawn.

****

Level.java literally just ticks 50 or so random tiles... that's SO got to go... heck, tiles probably don't even need tick methods; well, maybe not, at least. Plants might need one... yeah, so maybe those will have tick methods.

-----------------------------------------------------------------------------------

*?*?*?* Questionable Improvements (But still seem important)*?*?*?*

*?*?*?*

Make all Class instance lists similar to ListItems, but static; so, each one has a "get" method accepting a string. Maybe I could make them all extend a "ClassList" or "InstanceList" interface or something...

In a similar/related vein, make each subclass of these store their own lists of their instances, and they will just be added to the main one.
So, for resources, PotionResource would have a static list of all the potion resources, and Resource would just add those to it's collection.

Hmm... Actually, I have a better idea. How about I just instantiate everything in the list classes, but have the sub-classes record each instance? They could be recorded in a HashMap, with a string key for the name, that fetches the associated object instance.

I don't know...

*?*?*?*

Change saving/loading system dramatically... instead of a simple array, make loadFromFile load HashMaps! I probably love them too much... but that way, future changes would be WAY easier to account for; instead of changing ALL the indexes, I could just stop worrying about a name! or change it. But... this has it's downsides. Entities wouldn't go over well; they really are better off as lists...
Hey! maybe I can keep that one, and just make another loader for loadGame and such! That might work!

*?*?*?*