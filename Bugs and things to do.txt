	---Quick TODO's---

-continue commeting code and renovating code
-remove all the sets of 4-5 colors, in favor or a single color, preferably col1, since it's the brightest, or col4 for those sprites that are just seen underground.
-display current player score in score mode

Note to self: for more little bugs/ideas/concerns, search code for "TODO"
-----------------------------------------------------------------------------------

	####BUGS####
####
Creepers turn solid green on fuse timer rather than blinking.
####
I accidently removed the whole "SmashParticle" thing it seems... same with FireParticle...
####
Not sure, but broken/exploded obsidian brick may drop stone...it looks like stone.
####
Creeper one time, on lava level, w/ me in front of it, exploded, and left behind an odd square that had no texture, and didn't erase after an update to it...
####
Sound effects don't always play when they should; mostly it seems when other sounds should be on at the same time.
####
Many item names don't fit on the black "active item" bar at the bottom.
####

-----------------------------------------------------------------------------------

	****IDEAS(that should probably be implemented)****
****

Make respawn without bed += 20 blocks x/y of last spawn.

****

There's a lot to do in the Tile classes... many methods have many unnecessary parameters... and the torch effects account for all the "light" and "torch" static tiles in Tile.java. I think I'll make a HashMap out of that list, as well.

****

Take the random inv item adder methods in Level and DungeonChest, and move them to a public static method in Inventory.java.

****

Level.java literally just ticks 50 or so random tiles... that's SO got to go... heck, tiles probably don't even need tick methods; well, maybe not, at least. Plants might need one... yeah, so maybe those will have tick methods.

-----------------------------------------------------------------------------------

*?*?*?* Questionable Improvements (But still seem important)*?*?*?*

*?*?*?*

Make all Class instance lists similar to ListItems, but static; so, each one has a "get" method accepting a string. Maybe I could make them all extend a "ClassList" or "InstanceList" interface or something...

In a similar/related vein, make each subclass of these store their own lists of their instances, and they will just be added to the main one.
So, for resources, PotionResource would have a static list of all the potion resources, and Resource would just add those to it's collection.

Hmm... Actually, I have a better idea. How about I just instantiate everything in the list classes, but have the sub-classes record each instance? They could be recorded in a HashMap, with a string key for the name, that fetches the associated object instance.

I don't know...

*?*?*?*

Change saving/loading system dramatically... instead of a simple array, make loadFromFile load HashMaps! I probably love them too much... but that way, future changes would be WAY easier to account for; instead of changing ALL the indexes, I could just stop worrying about a name! or change it. But... this has it's downsides. Entities wouldn't go over well; they really are better off as lists...
Hey! maybe I can keep that one, and just make another loader for loadGame and such! That might work!

*?*?*?*