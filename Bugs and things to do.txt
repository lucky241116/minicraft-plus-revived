	---Quick TODO's---

-continue commeting code
-(see note about canWool in Entity.java)
-display current player score in score mode

Note to self: for more little bugs/ideas/concerns, search code for "TODO"
-----------------------------------------------------------------------------------

	####BUGS####
###
reported: green mobs on lvl 1, sometimes 2, don't do damage (in 1.9.1)
####
Not sure, but broken/exploded obsidian brick may drop stone...it looks like stone.
####
Creeper one time, on lava level, w/ me in front of it, exploded, and left behind an odd square that had no texture, and didn't erase after an update to it...
####
Sound effects don't always play when they should; mostly it seems when other sounds should be on at the same time.
####
new worlds use the current/previous keyboard presets, rather than the default ones, when creating a new world after loading a previous one.
####
Many item names don't fit on the black "active item" bar at the bottom.
####

-----------------------------------------------------------------------------------

	****IDEAS(that should probably be implemented)****
****

Make respawn without bed += 20 blocks x/y of last spawn.

****

There's a lot to do in the Tile classes... many methods have many unnecessary parameters... and the torch effects account for all the "light" and "torch" static tiles in Tile.java. I think I'll make a HashMap out of that list, as well.

****

Take the random inv item adder methods in Level and DungeonChest, and move them to a public static method in Inventory.java.

****

Make a TextPage class or something, for the About and Instructions sections of the TitleMenu; really, it's for pages that are non-interactive, just a bunch of text.
Also, add controls listing somewhere. Probably closely related to the below idea.

****

I have a system in place to save custom key controls, but lack the menu to edit them... I need to get that implemented.
	How about... another menu class, SelectMenu? It will parent all the cursor selection and scrollable menus; I can use it for the new KeymapMenu, and also WorldSelectMenu and InventoryMenu, with scrolling; the other menus won't use the scroll feature, but I can just make a boolean for that, I think.
	For those menus that don't even have a cursor, though, perhaps I could just make it a Menu..? If that doesn't work, I can always make a ChoiceMenu class, super simple, that just displays two choices with no cursor, and listens for enter and escape keypresses.

****

Level.java literally just ticks 50 or so random tiles... that's SO got to go... heck, tiles probably don't even need tick methods; well, maybe not, at least. Plants might need one... yeah, so maybe those will have tick methods.

-----------------------------------------------------------------------------------

*?*?*?* Questionable Improvements (But still seem important)*?*?*?*

Move OptionsMenu loads to a "profile" save, one that applies to all worlds, and that is loaded on startup. Whether the airwizard suit is worn will probably be part of these options, both because it makes sense, and becuase it simplifies things.

*?*?*?*

Make all Class instance lists similar to ListItems, but static; so, each one has a "get" method accepting a string. Maybe I could make them all extend a "ClassList" or "InstanceList" interface or something...

In a similar/related vein, make each subclass of these store their own lists of their instances, and they will just be added to the main one.
So, for resources, PotionResource would have a static list of all the potion resources, and Resource would just add those to it's collection.

Hmm... Actually, I have a better idea. How about I just instantiate everything in the list classes, but have the sub-classes record each instance? They could be recorded in a HashMap, with a string key for the name, that fetches the associated object instance.

I don't know...

*?*?*?*

Fix up the write system, here and there: Menu writeCentered() should write the given text in the center x of the menu window; Screen writeCentered() should write a string centered in the screen's x. Font should not do anything with centering, instead, maybe it should have a drawShadowed() method? It should have a default text color, too, maybe...
How about, just overload them all... whatever's provided, is used. Though, since they're all ints, that may not work too well...

*?*?*?*

Change saving/loading system dramatically... instead of a simple array, make loadFromFile load HashMaps! I probably love them too much... but that way, future changes would be WAY easier to account for; instead of changing ALL the indexes, I could just stop worrying about a name! or change it. But... this has it's downsides. Entities wouldn't go over well; they really are better off as lists...
Hey! maybe I can keep that one, and just make another loader for loadGame and such! That might work!

*?*?*?*