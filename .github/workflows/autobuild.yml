name: Nightly build
on:
  pull_request:
    types: [closed]
    branches: ["main"]
  schedule:
    - cron:  '0 0,4,8,12,16,20 * * *'
  workflow_dispatch:

jobs:
  conditions:
    runs-on: ubuntu-latest
    steps:
    - name: Checking conditions
      run: |
        needed=true
        out=$( gh api -XGET \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          repos/${{ github.repository }}/pulls \
          -F state=closed \
          -F base=main \
          -F sort=updated )
        latest=
        while read obj; do
          if [[ $obj != null ]]; then
            latest=$obj
            break
          fi
        done < <( echo $out | jq -c -r ".[] | .merged_at" | tr -d "\r" )
        [[ -z $latest ]] && echo "CONT=false" >> $GITHUB_ENV && exit 0
        out=$( gh api -XGET \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          repos/${{ github.repository }}/actions/workflows/autobuild.yml/runs \
          -F created=">=$latest" )
        f="[\"completed\",\"success\",\"in_progress\",\"queued\",\"requested\",\"waiting\",\"pending\"]"
        while read obj; do
          if $obj; then
            needed=false;
            break;
          fi
        done < <( echo $out | jq -c --arg f "$f" ".workflow_runs.[] | .status | IN($f[])" | tr -d "\r" )
        if needed; then
          echo "CONT=true" >> $GITHUB_ENV
        else
          echo "CONT=false" >> $GITHUB_ENV
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Abort
      if: ${{ ! env.CONT }}
      run: |
        gh run cancel ${{ github.run_id }}
        gh run watch ${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  gradle:
    needs: conditions
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.LITOROMTOKEN }}
    - name: Update ingame version
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "${{ vars.VERSION }}-dev${{ vars.VERSION_old }}"
        replace: "${{ vars.VERSION }}-dev${{ vars.VERSION_s }}"
        include: "src/client/java/minicraft/core/Game.java"
    - name: Update gradle version
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "version = \"${{ vars.VERSION }}-dev${{ vars.VERSION_old }}\""
        replace: "version = \"${{ vars.VERSION }}-dev${{ vars.VERSION_s }}\""
        include: "build.gradle"
    - name: Push changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "Increment Version"
        token: ${{ secrets.LITOROMTOKEN }}
        repository: ${{ secrets.GITHUB_REPOSITORY }}
        branch: ${{ github.ref }}
      
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 8

    - name: Increment old version number
      uses: action-pack/increment@v2
      with:
        name: 'VERSION_old'
        token: ${{ secrets.LITOROMTOKEN }}
        repository: ${{ secrets.GITHUB_REPOSITORY }}
        owner: 'MinicraftPlus'
        
    - name: Increment new version number
      uses: action-pack/increment@v2
      with:
        name: 'VERSION_s'
        token: ${{ secrets.LITOROMTOKEN }}
        repository: ${{ secrets.GITHUB_REPOSITORY }}
        owner: 'MinicraftPlus'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2.4.2
      
    - name: Execute Gradle build
      run: ./gradlew build

    - uses: "dciborow/action-github-releases@v1.0.1"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ vars.VERSION }}-dev${{ vars.VERSION_s }}"
        prerelease: true
        title: "Version ${{ vars.VERSION }}, Pre-release ${{ vars.VERSION_s }} (Nightly)"
        generate_release_notes: true
        files: |
          LICENSE
          ChangeLog.md
          build/libs/**.jar
          
